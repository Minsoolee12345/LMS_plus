<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.site.lms.mapper.ProgressMapper">

  <!-- 
    1) 특정 회원+영상의 진행 퍼센트를 조회
  -->
  <select id="findByMemberAndVideo" parameterType="map" resultType="int">
    SELECT PROGRESS
      FROM PROGRESS
     WHERE MEMBER_NO = #{memberNo, jdbcType=NUMERIC}
       AND VIDEO_NO  = #{videoNo,  jdbcType=NUMERIC}
  </select>

  <!--
    2) 특정 회원+강의(lectureNo)에 속한 영상들에 대해 PROGRESS 컬럼을 모두 조회
    JOIN을 이용하여 강의 번호가 일치하는 영상을 찾는다.
  -->
  <select id="findProgressByMemberAndLecture" parameterType="map" resultType="int">
    SELECT p.PROGRESS
      FROM PROGRESS p
      JOIN LECTURE_VIDEO v
        ON p.VIDEO_NO = v.VIDEO_NO
     WHERE p.MEMBER_NO  = #{memberNo,  jdbcType=NUMERIC}
       AND v.LECTURE_NO = #{lectureNo, jdbcType=NUMERIC}
  </select>

  <!--
    3) MERGE를 써서 회원+영상 조합이 있으면 UPDATE, 없으면 INSERT 
    Oracle에서는 MERGE INTO ... WHEN MATCHED/NOT MATCHED 로 삽입/갱신
  -->
  <insert id="insertOrUpdate" parameterType="map">
    MERGE INTO PROGRESS tgt
    USING (
      SELECT #{memberNo} MEMBER_NO,
             #{videoNo}  VIDEO_NO,
             #{progress} PROGRESS
        FROM DUAL
    ) src
    ON ( tgt.MEMBER_NO = src.MEMBER_NO
      AND tgt.VIDEO_NO  = src.VIDEO_NO )
    WHEN MATCHED THEN
      UPDATE SET tgt.PROGRESS = src.PROGRESS
    WHEN NOT MATCHED THEN
      INSERT (MEMBER_NO, VIDEO_NO, PROGRESS)
      VALUES (src.MEMBER_NO, src.VIDEO_NO, src.PROGRESS)
  </insert>
  
    <!-- 특정 강의(lectureNo)에 속한 모든 영상(videoNo)에 대한 진도 테이블 삭제 -->
  <delete id="deleteByLecture" parameterType="long">
    DELETE FROM PROGRESS
     WHERE VIDEO_NO IN (
       SELECT VIDEO_NO
         FROM LECTURE_VIDEO
        WHERE LECTURE_NO = #{lectureNo}
     )
  </delete>

</mapper>